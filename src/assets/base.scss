
@font-face {
  font-family: "roboto-thin";
  src: url("~/assets/fonts/roboto/Roboto-Thin.ttf") format("truetype");
}
@font-face {
  font-family: "roboto-light";
  src: url("~/assets/fonts/roboto/Roboto-Light.ttf") format("truetype");
}

// Returns either #fdfdfd or #222 based on $var contrast
// @function custom-color-contrast ($var) {
//   @return hsl(from $var h 0 clamp(20, round(100 - l, 100), 99));
// }

// Returns either #fdfdfd or #222 based on $var contrast
@function custom-color-contrast ($var) {
  @return hwb(from $var
    h
    clamp(0, round(up, b - w, 100), 99)
    clamp(0, 100 - round(up, b - w, 100), 80)
  );
}

:root {
  --page-width: 21cm;
  --page-height: 29.7cm;

  --default-text-light: #eee;
  --default-text-dark: #111;
}

// TODO: clean up
:root {
  --colorscheme-main: #d5ecd2;
  --colorscheme-secondary: #56afe4;

  --colorscheme-main: #313e67;
  --colorscheme-secondary: #ef6a18;
  --colorscheme-content-background: #eee;
  // --colorscheme-content-background: #222;
  --colorscheme-content-title-background: #ddd;

  // TODO: refactor when color-contrast() is shipped
  --colorscheme-main-text: #{custom-color-contrast(var(--colorscheme-main))};
  --colorscheme-content-text: #{custom-color-contrast(var(--colorscheme-content-background))};
  --colorscheme-content-title-text: #{custom-color-contrast(var(--colorscheme-content-title-background))};
}

*,
::before,
::after {
  box-sizing: border-box;
  box-decoration-break: clone;
  margin: 0;
  padding: 0;
}

:focus-visible {
  outline: 0.1rem solid currentColor;
  outline-offset: 0.2rem;
  z-index: 999;
}

html {
  height: 100%;
  width: 100%;
  background-color: #333;
  font-size: 1rem;
  line-height: 1.1em;
}

body {
  height: 100%;
  width: 100%;
}

h1, h2, h3, h4, h5, h6 {
  font-weight: 500;
  line-height: 1.2;
  break-inside: avoid;
  break-after: avoid;
}

a {
  color: currentColor;
  text-decoration: none;

  &:hover {
    text-decoration: underline;
    text-decoration-style: dotted;
  }
}

@media (prefers-reduced-motion) {
  *,
  ::before,
  ::after {
    animation-duration: 0ms !important;
    transition-duration: 0ms !important;
  }
}
